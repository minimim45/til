SELECT  tbl_employee.name,tbl_department.name
  FROM  tbl_employee, tbl_department;
  テーブルが同じ場所にあるとダメ繋げかたはダメ一つ tbl_employeeテーブルとtbl_departmenテーブルを一つ一つ結んでいく
  -　片方の全データを片方を結び付けたもの
  - 余分なデータを消す
  社員名と
  select tbl_employee.name,tbl_department.name
FROM tbl_employee,tbl_tbldepartment
where tbl_code = tbl_tbldepartment.code

これだと長いよね短くする。
SELECT tbl_employee.name,tbl_department.name
FROM tbl_employee AS X ,tbl_department
where tbl_code = tbl_department.code

FROM tbl_employeeは別名のｘに置き換えたtbl_departmentをｙに置き換えた
SELECT tbl_employee.name,tbl_department.name
FROM tbl_employee AS X ,tbl_department AS y
where tbl_code = tbl_department.code

**内部結合**

SELECT ｘ.name, y.name
FROM tbl_employee AS X ,tbl_department AS y
where tbl_code =  y.code

鈴木一郎	総務部
山田花子	総務部
佐藤栄作	営業部
田中達也	開発部
高橋和子	開発

## 左外部結合

SELECT x.name AS 社員名 , y.name AS 役職
FROM tbl_employee AS x LEFT OUTER JOIN tbl_post AS y
ON post_code = y.code

onで結合させる
LEFT OUTER JOIN 

自己結合
自分のテーブルに自分を結合させる

SELECT x.name AS 部下 , y.name AS 上司
FROM tbl_employee AS x, tbl_employee AS y
where x.manager = y.code

テーブルから総務部に所属する社員を表示する

SELECT x.name AS 部下 , y.name AS 上司
FROM tbl_employee AS x,  tbl_department AS y
where dpt_code = y.code
 AND y.name ='総務部'
 
 ただし、テーブルは結合しない
 
 SELECT name
FROM tbl_employee 
where dpt_code= (SELECT code
				 FROM tbl_department
                 where name = '総務部'）
副問い合せ（サブクエリ）


二つの比べるのものがある場合は＝ではなくINを使う
SELECT name
FROM tbl_employee 
where dpt_code　IN (SELECT code
				 FROM tbl_department
                 where name = '総務部'
                 　　　OR name = '開発部')
                    
  **テーブルから20万以上もらっている人**

SELECT name
FROM tbl_employee 
where code IN (SELECT emp_code
				 FROM tbl_salary
                 where salary >= 200000)
                
                同じ
** exists:**
を見極める方法演算子がほとんど
演算子をつかうときは
code = 101
dpt_BETWEEN '1972'
exists　（～）
フィールド名がつくcodeやテーブル名が必ず付く。フィールド名やテーブル名が入ってない場合は完全にexists
存在検査
上から1つずつ調べて、コードとエンプコードをてらしあわせて、サラリーテーブルから20万円を超える人を見つける。
SELECT name
FROM tbl_employee 
where exists (SELECT emp_code
			  FROM tbl_salary
			  where tbl_employee .code = emp_code
			  AND salary >= 200000)

存在しないものを調べる
existnの前にnotを付けることによって、存在しないものをしらべることが可能になる
where not exists~
各部署に所属する社員のかずを表示する（集計）
- グループ化一つ一つのグループ化をしていく。
SELECT dpt_code,COUNT(*)
  FROM tbl_employee
  GROUP BY dpt_code  
グループ化をすると→集計ができる（合計、平均、件数、最小値、最大値）
集計（合計）関数
COUNT....件数
SUM...合計
AVG...平均
MAX...最大
MIN...最小
GROUP BYを使うと集計を行うとSELECT dpt_code,COUNT(*)集計したテーブルか結果を記入するSELECT に記入できるものが制限される
ASをつけて
